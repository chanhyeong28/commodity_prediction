# TimeLlaMA Prompts Summary

## Directory Structure
datasets/prompts/
├── commodity_forecasting_prompts.txt    # General prompt templates and components
├── sample_prompts.json                  # 5 sample prompts with complete structure
├── ablation_prompts.txt                 # Prompts for ablation study variants
├── mitsui_specific_prompts.txt          # Mitsui dataset specific prompts
├── prompt_templates.py                  # Python prompt generator module
├── demo_usage.py                        # Demo script showing usage examples
├── README.md                            # Comprehensive documentation
└── prompt_summary.txt                   # This summary file

## Quick Start

### 1. Load Sample Prompts
```python
import json
with open('sample_prompts.json', 'r') as f:
    prompts = json.load(f)
    print(prompts['prompts'][0]['full_prompt'])
```

### 2. Generate Random Prompts
```python
from prompt_templates import TimeLlaMAPromptGenerator
generator = TimeLlaMAPromptGenerator()
prompt = generator.generate_random_prompt()
print(prompt['prompt'])
```

### 3. Generate Mitsui Prompts
```python
mitsui_prompts = generator.generate_mitsui_prompts(num_prompts=5)
for p in mitsui_prompts:
    print(p['prompt'])
```

### 4. Run Demo
```bash
python demo_usage.py
```

## Prompt Format
<|start_prompt|>Dataset description: {description} Task description: {task}; Input statistics: min value {min}, max value {max}, median value {median}, the trend of input is {trend}, top 5 lags are : {lags}<|<end_prompt|>

## Key Features
- ✅ TimeLlaMA-compatible format with start/end markers
- ✅ Realistic commodity forecasting statistics
- ✅ Support for different prediction horizons (96, 192, 336, 720 steps)
- ✅ Ablation study variants (TimeLlaMA-1 through TimeLlaMA-6)
- ✅ Mitsui dataset specific prompts
- ✅ Market scenario prompts (bull, bear, volatile, seasonal)
- ✅ Programmatic prompt generation
- ✅ JSON format for easy integration
- ✅ Comprehensive documentation and examples

## Integration with TimeLlaMA
These prompts are designed to work seamlessly with the TimeLlaMA implementation:
1. Load or generate prompts
2. Use TimeLlaMA's generate_prompt() method
3. Pass to build_prompt_embeddings() for tokenization
4. Use in cross-attention alignment with time series tokens

## File Counts
- 5 sample prompts in JSON format
- 6 ablation study variants
- 4 prediction horizons (96, 192, 336, 720 steps)
- 4 market scenarios (bull, bear, sideways, volatile)
- 4 seasonal patterns (spring, summer, fall, winter)
- 4 economic conditions (inflation, deflation, growth, recession)
- Unlimited programmatic generation capability

Total: 100+ ready-to-use prompts + unlimited generation
